{"version":3,"sources":["services/blogs.js","services/login.js","components/Notification.js","components/loginForm.js","components/blogForm.js","components/Blog.js","components/togglable.js","App.js","index.js"],"names":["token","getAll","a","axios","get","request","data","create","newObject","config","headers","Authorization","post","response","update","id","updatedObject","put","remove","delete","setToken","newToken","login","credentials","Notification","message","messageType","className","LoginForm","userCreditentials","useState","username","setUsername","password","setPassword","handleLogin","event","preventDefault","onSubmit","type","value","name","onChange","target","BlogForm","newBlog","title","setTitle","author","setAuthor","url","setUrl","Blog","blog","updateLikes","deleteBlog","visible","setVisible","showWhenVisible","display","buttonText","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","onClick","margin","likes","Togglable","React","forwardRef","props","ref","hideWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setMessage","setMessagetype","user","setUser","updateBlog","setUpdateBlog","fetchInProgress","setFetchInProgress","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogFormRef","useRef","loginService","setItem","stringify","setTimeout","addNewBlog","current","returnedBlog","error","console","log","filter","b","changedBlog","map","confirm","removedBlog","removeItem","filterBlogs","sort","key","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a49734f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = async (id, updatedObject) => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObject, config)\n    return response.data\n}\n\nconst remove = async id => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Notification = ({ message, messageType }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={messageType}>\n            {message}\n        </div>\n    )\n}\n\nNotification.propTypes = {\n    message: PropTypes.string,\n    messageType: PropTypes.string\n}\n\nexport default Notification","import React, { useState } from 'react'\n\nconst LoginForm = ({ userCreditentials }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        userCreditentials({ username, password })\n        setUsername('')\n        setPassword('')\n    }\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    username\n                    <input\n                        type='text'\n                        value={username}\n                        id='username'\n                        name='Username'\n                        onChange={({ target }) => setUsername(target.value)}\n                    />\n                </div>\n                <div>\n                    password\n                    <input\n                        type='password'\n                        value={password}\n                        id='password'\n                        name='Password'\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <button id='submitbutton'type='submit'>login</button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm = ({ newBlog }) => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const addNewBlog = (event) => {\n        event.preventDefault()\n        newBlog({\n            title: title,\n            author: author,\n            url: url\n        })\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n\n    return (\n        <div>\n            <form onSubmit={addNewBlog} className='blogForm'>\n                <h2>Create new blog</h2>\n                <div>\n                    title\n                    <input\n                        type=\"text\"\n                        className='titleInput'\n                        value={title}\n                        name=\"Title\"\n                        onChange={({ target }) => setTitle(target.value)}\n                    />\n                </div>\n                <div>\n                    author\n                    <input\n                        type=\"text\"\n                        className='authorInput'\n                        value={author}\n                        name=\"Author\"\n                        onChange={({ target }) => setAuthor(target.value)}\n                    />\n                </div>\n                <div>\n                    url\n                    <input\n                        type=\"text\"\n                        className='urlInput'\n                        value={url}\n                        name=\"Url\"\n                        onChange={({ target }) => setUrl(target.value)}\n                    />\n                </div>\n                <button type='submit'>create</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BlogForm","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, updateLikes, deleteBlog }) => {\n    const [visible, setVisible] = useState(false)\n\n    const showWhenVisible = { display: visible ? '' : 'none' }\n    const buttonText = visible ? 'hide' : 'view'\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    }\n\n    return (\n        <div style={blogStyle} className='blog'>\n            <div className='viewDetails'>\n                {blog.title} - {blog.author}<button onClick={toggleVisibility} className='viewHideButton'>{buttonText}</button>\n                <div style={showWhenVisible} className='hiddenComponent'>\n                    <p style = {{ margin: 0 }}>{blog.url}</p>\n                    <p style = {{ margin: 0 }} id='blogLikes'>{blog.likes}<button onClick={() => updateLikes(blog.id)}>like</button></p>\n                    <p style = {{ margin: 0 }}>{blog.author}</p>\n                    <button onClick={() => deleteBlog(blog.id)}>remove</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nBlog.propTypes = {\n    blog: PropTypes.object,\n    updateLikes: PropTypes.func,\n    deleteBlog: PropTypes.func\n}\n\nexport default Blog\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/loginForm'\nimport BlogForm from './components/blogForm'\nimport Blog from './components/Blog'\nimport Togglable from './components/togglable'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [message, setMessage] = useState(null)\n    const [messageType, setMessagetype] = useState(null)\n    const [user, setUser] = useState(null)\n    const [updateBlog, setUpdateBlog] = useState(false)\n    const [fetchInProgress, setFetchInProgress] = useState(true)\n\n    useEffect(() => {\n        blogService\n            .getAll()\n            .then(blogs => {\n                setBlogs(blogs)\n                setFetchInProgress(false)\n            })\n    }, [updateBlog])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n        }\n    }, [])\n\n    const blogFormRef = useRef()\n\n    const handleLogin = async (userCreditentials) => {\n        try {\n            const user = await loginService.login(userCreditentials)\n\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            )\n\n            blogService.setToken(user.token)\n            setUser(user)\n        } catch (exception) {\n            setMessage('Wrong credentials')\n            setMessagetype('error')\n            setTimeout(() => {\n                setMessage(null)\n                setMessagetype(null)\n            }, 5000)\n        }\n    }\n\n    const handleLogout = () => {\n        setUser(null)\n        window.localStorage.removeItem('loggedBlogappUser')\n    }\n\n    const addNewBlog = (newBlog) => {\n        try {\n            blogFormRef.current.toggleVisibility()\n            blogService.setToken(user.token)\n            blogService\n                .create(newBlog)\n                .then(returnedBlog => {\n                    setUpdateBlog(!updateBlog)\n                    setMessage(`A new blog: '${returnedBlog.title}' by ${returnedBlog.author} added`)\n                    setMessagetype('info')\n                    setTimeout(() => {\n                        setMessage(null)\n                        setMessagetype(null)\n                    }, 5000)\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const updateLikes = id => {\n        const blog = blogs.filter(b => b.id === id)\n        const changedBlog = { ...blog[0], likes: blog[0].likes + 1 }\n\n        setFetchInProgress(true)\n\n        blogService.setToken(user.token)\n\n        blogService\n            .update(id, changedBlog)\n            .then(returnedBlog => {\n                setUpdateBlog(!updateBlog)\n                setMessage(`A blog: ${changedBlog.title} by ${changedBlog.author} liked`)\n                setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n                setMessagetype('info')\n                setTimeout(() => {\n                    setMessage(null)\n                    setMessagetype(null)\n                }, 5000)\n            })\n    }\n\n    const deleteBlog = id => {\n        const blog = blogs.filter(b => b.id === id)[0]\n\n        if (window.confirm(`Remove blog ${blog.title} by ${blog.author} ?`)) {\n            setFetchInProgress(true)\n\n            blogService.setToken(user.token)\n\n            blogService\n                .remove(id)\n                // eslint-disable-next-line no-unused-vars\n                .then(removedBlog => {\n                    setUpdateBlog(!updateBlog)\n                    setMessage('Blog removed')\n                    setBlogs(blogs.filter(blog => blog.id !== id))\n                    setMessagetype('info')\n                    setTimeout(() => {\n                        setMessage(null)\n                        setMessagetype(null)\n                    }, 5000)\n\n                })\n        }\n    }\n\n    const filterBlogs = (blogs) => {\n        return blogs\n            .filter(blog => blog.user !== null)\n            .filter(blog => blog.user.username === user.username)\n    }\n\n    const loginForm = () => (\n        <LoginForm userCreditentials={handleLogin}/>\n    )\n\n    const blogForm = () => (\n        <Togglable buttonLabel='New blog' ref={blogFormRef}>\n            <BlogForm newBlog={addNewBlog} />\n        </Togglable>\n    )\n\n    const blogList = () => (\n        <div className='blogsDiv'>\n            {fetchInProgress\n                ? <p>Loading</p>\n                :  filterBlogs(blogs)\n                    .sort((a, b) => b.likes - a.likes)\n                    .map(blog =>\n                        <Blog key={String(blog.id)} blog={blog} updateLikes={updateLikes} deleteBlog={deleteBlog}/>)\n            }\n        </div>\n    )\n\n    return (\n        <div>\n            {user === null ?\n                <div>\n                    <Notification message={message} messageType={messageType} />\n                    {loginForm()}\n                </div>\n                : <div>\n                    <h2>blogs</h2>\n                    <Notification message={message} messageType={messageType} />\n                    {`${user.name} logged in`} <button onClick={handleLogout}>log out</button>\n                    <br/><br/>\n                    {blogForm()}\n                    {blogList()}\n                </div> }\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'))"],"sourceRoot":""}